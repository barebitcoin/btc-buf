syntax = "proto3";

package bitcoin.bitcoind.v1alpha;

import "google/protobuf/timestamp.proto";

service BitcoinService {
  rpc GetBlockchainInfo(GetBlockchainInfoRequest) returns (GetBlockchainInfoResponse);

  // Fetches in-wallet transactions
  rpc GetTransaction(GetTransactionRequest) returns (GetTransactionResponse);

  // Wallet stuff
  rpc GetNewAddress(GetNewAddressRequest) returns (GetNewAddressResponse);
  rpc GetWalletInfo(GetWalletInfoRequest) returns (GetWalletInfoResponse);
}

message GetBlockchainInfoRequest {}
message GetBlockchainInfoResponse {
  string best_block_hash = 1;
  string chain = 2;
  string chain_work = 3;
  bool initial_block_download = 4;
}

message GetNewAddressRequest {
  string label = 1;
  string address_type = 2;

  // Only needs to be set if dealing with multiple wallets at the same time.
  // TODO: better suited as a header?
  string wallet = 3;
}

message GetNewAddressResponse {
  string address = 1;
}

message GetWalletInfoRequest {
  // Only needs to be set if dealing with multiple wallets at the same time.
  // TODO: better suited as a header?
  string wallet = 1;
}

message GetWalletInfoResponse {
  string wallet_name = 1;
  int64 wallet_version = 2;
  string format = 3;

  // The following fields are left out, as they are deprecated.
  // double balance = 4;
  // double unconfirmed_balance = 5;
  // double immature_balance = 6;

  int64 tx_count = 7;
  int64 key_pool_size = 8;
  int64 key_pool_size_hd_internal = 9;
  double pay_tx_fee = 10;
  bool private_keys_enabled = 11;
  bool avoid_reuse = 12;

  // Not set if no scan is in progress.
  WalletScan scanning = 13;
  bool descriptors = 14;
  bool external_signer = 15;
}

message WalletScan {
  int64 duration = 1;
  double progress = 2;
}

message GetTransactionRequest {
  string txid = 1;
  bool include_watchonly = 2;
  bool verbose = 3;
  string wallet = 4;
}

// Commented fields are not present in btcd/rpcclient
message GetTransactionResponse {
  double amount = 1;
  double fee = 2;
  uint32 confirmations = 3;
  // bool generated = 4;
  // bool trusted = 5;
  string block_hash = 6;
  // string block_height = 7;
  uint32 block_index = 8;
  google.protobuf.Timestamp block_time = 9;
  string txid = 10;
  // string witness_txid = 11;
  repeated string wallet_conflicts = 12;
  string replaced_by_txid = 13;
  string replaces_txid = 14;
  // string comment = 15;
  // string to = 16;
  google.protobuf.Timestamp time = 17;
  google.protobuf.Timestamp time_received = 18;

  // Whether this transaction signals BIP125 (Replace-by-fee, RBF) replaceability
  // or has an unconfirmed ancestor signaling BIP125 replaceability. May be unspecified
  // for unconfirmed transactions not in the mempool because their
  // unconfirmed ancestors are unknown.
  Replaceable bip125_replaceable = 19;

  // repeated string parent_descriptors = 20;

  enum Replaceable {
    REPLACEABLE_UNSPECIFIED = 0;
    REPLACEABLE_YES = 1;
    REPLACEABLE_NO = 2;
  }

  enum Category {
    CATEGORY_UNSPECIFIED = 0;
    CATEGORY_SEND = 1;
    CATEGORY_RECEIVE = 2;
    CATEGORY_GENERATE = 3;
    CATEGORY_IMMATURE = 4;
    CATEGORY_ORPHAN = 5;
  }

  message Details {
    bool involves_watch_only = 1;
    string address = 2;
    // TODO: enum - send, receive, generate, immature, orphan
    Category category = 3;
    double amount = 4;
    // string label = 5;
    uint32 vout = 6;
    double fee = 7;
    // bool abandoned = 8;
    // repeated string parent_descriptors = 9;
  }

  repeated Details details = 21;
}
