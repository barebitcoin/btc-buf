// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: bitcoin/drivechaind/v1/drivechain.proto

package drivechaindv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSidechainDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The sidechain deposit address to send to.
	Destination string `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	// The amount in BTC to send. eg 0.1
	Amount float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// The fee in BTC
	Fee float64 `protobuf:"fixed64,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *CreateSidechainDepositRequest) Reset() {
	*x = CreateSidechainDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSidechainDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSidechainDepositRequest) ProtoMessage() {}

func (x *CreateSidechainDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSidechainDepositRequest.ProtoReflect.Descriptor instead.
func (*CreateSidechainDepositRequest) Descriptor() ([]byte, []int) {
	return file_bitcoin_drivechaind_v1_drivechain_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSidechainDepositRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *CreateSidechainDepositRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateSidechainDepositRequest) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type CreateSidechainDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *CreateSidechainDepositResponse) Reset() {
	*x = CreateSidechainDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSidechainDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSidechainDepositResponse) ProtoMessage() {}

func (x *CreateSidechainDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSidechainDepositResponse.ProtoReflect.Descriptor instead.
func (*CreateSidechainDepositResponse) Descriptor() ([]byte, []int) {
	return file_bitcoin_drivechaind_v1_drivechain_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSidechainDepositResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type ListActiveSidechainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListActiveSidechainsRequest) Reset() {
	*x = ListActiveSidechainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActiveSidechainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveSidechainsRequest) ProtoMessage() {}

func (x *ListActiveSidechainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveSidechainsRequest.ProtoReflect.Descriptor instead.
func (*ListActiveSidechainsRequest) Descriptor() ([]byte, []int) {
	return file_bitcoin_drivechaind_v1_drivechain_proto_rawDescGZIP(), []int{2}
}

type ListActiveSidechainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sidechains []*ListActiveSidechainsResponse_Sidechain `protobuf:"bytes,1,rep,name=sidechains,proto3" json:"sidechains,omitempty"`
}

func (x *ListActiveSidechainsResponse) Reset() {
	*x = ListActiveSidechainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActiveSidechainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveSidechainsResponse) ProtoMessage() {}

func (x *ListActiveSidechainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveSidechainsResponse.ProtoReflect.Descriptor instead.
func (*ListActiveSidechainsResponse) Descriptor() ([]byte, []int) {
	return file_bitcoin_drivechaind_v1_drivechain_proto_rawDescGZIP(), []int{3}
}

func (x *ListActiveSidechainsResponse) GetSidechains() []*ListActiveSidechainsResponse_Sidechain {
	if x != nil {
		return x.Sidechains
	}
	return nil
}

type ListSidechainDepositsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot int32 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *ListSidechainDepositsRequest) Reset() {
	*x = ListSidechainDepositsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSidechainDepositsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSidechainDepositsRequest) ProtoMessage() {}

func (x *ListSidechainDepositsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSidechainDepositsRequest.ProtoReflect.Descriptor instead.
func (*ListSidechainDepositsRequest) Descriptor() ([]byte, []int) {
	return file_bitcoin_drivechaind_v1_drivechain_proto_rawDescGZIP(), []int{4}
}

func (x *ListSidechainDepositsRequest) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type ListSidechainDepositsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deposits []*ListSidechainDepositsResponse_SidechainDeposit `protobuf:"bytes,1,rep,name=deposits,proto3" json:"deposits,omitempty"`
}

func (x *ListSidechainDepositsResponse) Reset() {
	*x = ListSidechainDepositsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSidechainDepositsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSidechainDepositsResponse) ProtoMessage() {}

func (x *ListSidechainDepositsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSidechainDepositsResponse.ProtoReflect.Descriptor instead.
func (*ListSidechainDepositsResponse) Descriptor() ([]byte, []int) {
	return file_bitcoin_drivechaind_v1_drivechain_proto_rawDescGZIP(), []int{5}
}

func (x *ListSidechainDepositsResponse) GetDeposits() []*ListSidechainDepositsResponse_SidechainDeposit {
	if x != nil {
		return x.Deposits
	}
	return nil
}

type ListActiveSidechainsResponse_Sidechain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Nversion      uint32 `protobuf:"varint,3,opt,name=nversion,proto3" json:"nversion,omitempty"`
	Hashid1       string `protobuf:"bytes,4,opt,name=hashid1,proto3" json:"hashid1,omitempty"`
	Hashid2       string `protobuf:"bytes,5,opt,name=hashid2,proto3" json:"hashid2,omitempty"`
	Slot          int32  `protobuf:"varint,6,opt,name=slot,proto3" json:"slot,omitempty"`
	AmountSatoshi int64  `protobuf:"varint,7,opt,name=amount_satoshi,json=amountSatoshi,proto3" json:"amount_satoshi,omitempty"`
	ChaintipTxid  string `protobuf:"bytes,8,opt,name=chaintip_txid,json=chaintipTxid,proto3" json:"chaintip_txid,omitempty"`
}

func (x *ListActiveSidechainsResponse_Sidechain) Reset() {
	*x = ListActiveSidechainsResponse_Sidechain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActiveSidechainsResponse_Sidechain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveSidechainsResponse_Sidechain) ProtoMessage() {}

func (x *ListActiveSidechainsResponse_Sidechain) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveSidechainsResponse_Sidechain.ProtoReflect.Descriptor instead.
func (*ListActiveSidechainsResponse_Sidechain) Descriptor() ([]byte, []int) {
	return file_bitcoin_drivechaind_v1_drivechain_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListActiveSidechainsResponse_Sidechain) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListActiveSidechainsResponse_Sidechain) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListActiveSidechainsResponse_Sidechain) GetNversion() uint32 {
	if x != nil {
		return x.Nversion
	}
	return 0
}

func (x *ListActiveSidechainsResponse_Sidechain) GetHashid1() string {
	if x != nil {
		return x.Hashid1
	}
	return ""
}

func (x *ListActiveSidechainsResponse_Sidechain) GetHashid2() string {
	if x != nil {
		return x.Hashid2
	}
	return ""
}

func (x *ListActiveSidechainsResponse_Sidechain) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ListActiveSidechainsResponse_Sidechain) GetAmountSatoshi() int64 {
	if x != nil {
		return x.AmountSatoshi
	}
	return 0
}

func (x *ListActiveSidechainsResponse_Sidechain) GetChaintipTxid() string {
	if x != nil {
		return x.ChaintipTxid
	}
	return ""
}

type ListSidechainDepositsResponse_SidechainDeposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nsidechain int32  `protobuf:"varint,1,opt,name=nsidechain,proto3" json:"nsidechain,omitempty"`
	Strdest    string `protobuf:"bytes,2,opt,name=strdest,proto3" json:"strdest,omitempty"`
	Txhex      string `protobuf:"bytes,3,opt,name=txhex,proto3" json:"txhex,omitempty"`
	Nburnindex int32  `protobuf:"varint,4,opt,name=nburnindex,proto3" json:"nburnindex,omitempty"`
	Ntx        int32  `protobuf:"varint,5,opt,name=ntx,proto3" json:"ntx,omitempty"`
	Hashblock  string `protobuf:"bytes,6,opt,name=hashblock,proto3" json:"hashblock,omitempty"`
}

func (x *ListSidechainDepositsResponse_SidechainDeposit) Reset() {
	*x = ListSidechainDepositsResponse_SidechainDeposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSidechainDepositsResponse_SidechainDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSidechainDepositsResponse_SidechainDeposit) ProtoMessage() {}

func (x *ListSidechainDepositsResponse_SidechainDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSidechainDepositsResponse_SidechainDeposit.ProtoReflect.Descriptor instead.
func (*ListSidechainDepositsResponse_SidechainDeposit) Descriptor() ([]byte, []int) {
	return file_bitcoin_drivechaind_v1_drivechain_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ListSidechainDepositsResponse_SidechainDeposit) GetNsidechain() int32 {
	if x != nil {
		return x.Nsidechain
	}
	return 0
}

func (x *ListSidechainDepositsResponse_SidechainDeposit) GetStrdest() string {
	if x != nil {
		return x.Strdest
	}
	return ""
}

func (x *ListSidechainDepositsResponse_SidechainDeposit) GetTxhex() string {
	if x != nil {
		return x.Txhex
	}
	return ""
}

func (x *ListSidechainDepositsResponse_SidechainDeposit) GetNburnindex() int32 {
	if x != nil {
		return x.Nburnindex
	}
	return 0
}

func (x *ListSidechainDepositsResponse_SidechainDeposit) GetNtx() int32 {
	if x != nil {
		return x.Ntx
	}
	return 0
}

func (x *ListSidechainDepositsResponse_SidechainDeposit) GetHashblock() string {
	if x != nil {
		return x.Hashblock
	}
	return ""
}

var File_bitcoin_drivechaind_v1_drivechain_proto protoreflect.FileDescriptor

var file_bitcoin_drivechaind_v1_drivechain_proto_rawDesc = []byte{
	0x0a, 0x27, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x62, 0x69, 0x74, 0x63, 0x6f,
	0x69, 0x6e, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x22, 0x6b, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0x34,
	0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xf4, 0x02, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0a, 0x73, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f,
	0x69, 0x6e, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x64, 0x65,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x0a, 0x73, 0x69, 0x64, 0x65, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x73, 0x1a, 0xf3, 0x01, 0x0a, 0x09, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x69, 0x64,
	0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x69, 0x64, 0x31,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x69, 0x64, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x69, 0x64, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x74, 0x6f, 0x73, 0x68, 0x69,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x61,
	0x74, 0x6f, 0x73, 0x68, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x74, 0x69,
	0x70, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x74, 0x69, 0x70, 0x54, 0x78, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x1c, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0xb8,
	0x02, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x62, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x46, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x08, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x73, 0x1a, 0xb2, 0x01, 0x0a, 0x10, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72,
	0x64, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x64,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x78, 0x68, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x78, 0x68, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x62, 0x75,
	0x72, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e,
	0x62, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x74, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x74, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x68,
	0x61, 0x73, 0x68, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x68, 0x61, 0x73, 0x68, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x32, 0xa8, 0x03, 0x0a, 0x11, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x87, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x35, 0x2e, 0x62, 0x69, 0x74,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x73, 0x12, 0x33, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69,
	0x6e, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x12, 0x34, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69,
	0x6e, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0xf0, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x69, 0x74,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x42, 0x0f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x72, 0x65, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x62,
	0x74, 0x63, 0x2d, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x69, 0x74, 0x63, 0x6f,
	0x69, 0x6e, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64, 0x2f, 0x76,
	0x31, 0x3b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x42, 0x44, 0x58, 0xaa, 0x02, 0x16, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x16, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x22, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69,
	0x6e, 0x5c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x64, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x18, 0x42,
	0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x3a, 0x3a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bitcoin_drivechaind_v1_drivechain_proto_rawDescOnce sync.Once
	file_bitcoin_drivechaind_v1_drivechain_proto_rawDescData = file_bitcoin_drivechaind_v1_drivechain_proto_rawDesc
)

func file_bitcoin_drivechaind_v1_drivechain_proto_rawDescGZIP() []byte {
	file_bitcoin_drivechaind_v1_drivechain_proto_rawDescOnce.Do(func() {
		file_bitcoin_drivechaind_v1_drivechain_proto_rawDescData = protoimpl.X.CompressGZIP(file_bitcoin_drivechaind_v1_drivechain_proto_rawDescData)
	})
	return file_bitcoin_drivechaind_v1_drivechain_proto_rawDescData
}

var file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_bitcoin_drivechaind_v1_drivechain_proto_goTypes = []any{
	(*CreateSidechainDepositRequest)(nil),                  // 0: bitcoin.drivechaind.v1.CreateSidechainDepositRequest
	(*CreateSidechainDepositResponse)(nil),                 // 1: bitcoin.drivechaind.v1.CreateSidechainDepositResponse
	(*ListActiveSidechainsRequest)(nil),                    // 2: bitcoin.drivechaind.v1.ListActiveSidechainsRequest
	(*ListActiveSidechainsResponse)(nil),                   // 3: bitcoin.drivechaind.v1.ListActiveSidechainsResponse
	(*ListSidechainDepositsRequest)(nil),                   // 4: bitcoin.drivechaind.v1.ListSidechainDepositsRequest
	(*ListSidechainDepositsResponse)(nil),                  // 5: bitcoin.drivechaind.v1.ListSidechainDepositsResponse
	(*ListActiveSidechainsResponse_Sidechain)(nil),         // 6: bitcoin.drivechaind.v1.ListActiveSidechainsResponse.Sidechain
	(*ListSidechainDepositsResponse_SidechainDeposit)(nil), // 7: bitcoin.drivechaind.v1.ListSidechainDepositsResponse.SidechainDeposit
}
var file_bitcoin_drivechaind_v1_drivechain_proto_depIdxs = []int32{
	6, // 0: bitcoin.drivechaind.v1.ListActiveSidechainsResponse.sidechains:type_name -> bitcoin.drivechaind.v1.ListActiveSidechainsResponse.Sidechain
	7, // 1: bitcoin.drivechaind.v1.ListSidechainDepositsResponse.deposits:type_name -> bitcoin.drivechaind.v1.ListSidechainDepositsResponse.SidechainDeposit
	0, // 2: bitcoin.drivechaind.v1.DrivechainService.CreateSidechainDeposit:input_type -> bitcoin.drivechaind.v1.CreateSidechainDepositRequest
	2, // 3: bitcoin.drivechaind.v1.DrivechainService.ListActiveSidechains:input_type -> bitcoin.drivechaind.v1.ListActiveSidechainsRequest
	4, // 4: bitcoin.drivechaind.v1.DrivechainService.ListSidechainDeposits:input_type -> bitcoin.drivechaind.v1.ListSidechainDepositsRequest
	1, // 5: bitcoin.drivechaind.v1.DrivechainService.CreateSidechainDeposit:output_type -> bitcoin.drivechaind.v1.CreateSidechainDepositResponse
	3, // 6: bitcoin.drivechaind.v1.DrivechainService.ListActiveSidechains:output_type -> bitcoin.drivechaind.v1.ListActiveSidechainsResponse
	5, // 7: bitcoin.drivechaind.v1.DrivechainService.ListSidechainDeposits:output_type -> bitcoin.drivechaind.v1.ListSidechainDepositsResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_bitcoin_drivechaind_v1_drivechain_proto_init() }
func file_bitcoin_drivechaind_v1_drivechain_proto_init() {
	if File_bitcoin_drivechaind_v1_drivechain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSidechainDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSidechainDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListActiveSidechainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListActiveSidechainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListSidechainDepositsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListSidechainDepositsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListActiveSidechainsResponse_Sidechain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListSidechainDepositsResponse_SidechainDeposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bitcoin_drivechaind_v1_drivechain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bitcoin_drivechaind_v1_drivechain_proto_goTypes,
		DependencyIndexes: file_bitcoin_drivechaind_v1_drivechain_proto_depIdxs,
		MessageInfos:      file_bitcoin_drivechaind_v1_drivechain_proto_msgTypes,
	}.Build()
	File_bitcoin_drivechaind_v1_drivechain_proto = out.File
	file_bitcoin_drivechaind_v1_drivechain_proto_rawDesc = nil
	file_bitcoin_drivechaind_v1_drivechain_proto_goTypes = nil
	file_bitcoin_drivechaind_v1_drivechain_proto_depIdxs = nil
}
